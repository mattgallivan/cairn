{
    "version": "2.0.0",
    "tasks": [
        // --- CLEAN ---
        {
            "label": "Clean",
            "group": "none",
            "type": "shell",
            "command": "rm",
            "args": [
                "-rf",
                "${workspaceFolder}/build"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": []
        },
        // --- CMAKE ---
        {
            "label": "Create Build Directory",
            "group": "none",
            "type": "shell",
            "command": "mkdir",
            "args": [
                "-p",
                "${workspaceFolder}/build"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": []
        },
        {
            "label": "Configure CMake",
            "group": "build",
            "type": "shell",
            "command": "cmake",
            "args": [
                "-DCMAKE_BUILD_TYPE=Debug",
                ".."
            ],
            "options": {
                "cwd": "${workspaceFolder}/build"
            },
            "problemMatcher": "$gcc",
            "dependsOn": "Create Build Directory"
        },
        // --- SAMPLES ---
        {
            "label": "Build Sample",
            "group": "build",
            "type": "shell",
            "command": "make",
            "args": [
                "${input:sample}"
            ],
            "options": {
                "cwd": "${workspaceFolder}/build"
            },
            "problemMatcher": "$gcc",
            "dependsOn": "Configure CMake"
        },
        {
            "label": "Run Sample",
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "type": "shell",
            "command": "${workspaceFolder}/build/${input:sample}",
            "problemMatcher": [],
            "dependsOn": "Build Sample"
        },
        // --- TESTS ---
        {
            "label": "Build Tests",
            "group": "build",
            "type": "shell",
            "command": "make",
            "args": [
                "tests"
            ],
            "options": {
                "cwd": "${workspaceFolder}/build"
            },
            "dependsOn": "Configure CMake",
            "problemMatcher": "$gcc"
        },
        {
            "label": "Run Tests",
            "group": "test",
            "type": "shell",
            "command": "${workspaceFolder}/build/tests",
            "problemMatcher": [],
            "dependsOn": "Build Tests"
        },
        // --- COVERAGE ---
        {
            "label": "Capture Coverage",
            "group": "test",
            "type": "shell",
            "command": "lcov",
            "args": [
                "--capture",
                "--directory",
                ".",
                "--output-file",
                "lcov.info"
            ],
            "options": {
                "cwd": "${workspaceFolder}/build"
            },
            "problemMatcher": [],
            "dependsOn": "Run Tests"
        },
        {
            "label": "Generate Coverage Report",
            "group": "test",
            "type": "shell",
            "command": "genhtml",
            "args": [
                "coverage.info",
                "--output-directory",
                "coverage"
            ],
            "options": {
                "cwd": "${workspaceFolder}/build"
            },
            "problemMatcher": [],
            "dependsOn": "Capture Coverage"
        },
        {
            "label": "Open Coverage Report",
            "group": "test",
            "type": "shell",
            "command": "xdg-open",
            "args": [
                "${workspaceFolder}/build/coverage/index.html"
            ],
            "problemMatcher": [],
            "dependsOn": "Generate Coverage Report"
        }
    ],
    "inputs": [
        {
            "id": "sample",
            "type": "promptString",
            "description": "Enter the sample name",
            "default": "animation"
        }
    ]
}